LN(1)                   NetBSD General Commands Manual                   LN(1)

NNAAMMEE
     llnn -- make links

SSYYNNOOPPSSIISS
     llnn [--ffhhiinnssvv] _s_o_u_r_c_e___f_i_l_e [_t_a_r_g_e_t___f_i_l_e]
     llnn [--ffhhiinnssvv] _s_o_u_r_c_e___f_i_l_e _._._. _t_a_r_g_e_t___d_i_r

DDEESSCCRRIIPPTTIIOONN
     The llnn utility creates a new directory entry (linked file) which has the
     same modes as the original file.  It is useful for maintaining multiple
     copies of a file in many places at once without using up storage for the
     ``copies''; instead, a link ``points'' to the original copy.  There are
     two types of links: hard links and symbolic links.  How a link ``points''
     to a file is one of the differences between a hard or symbolic link.

     The options are as follows:

     --ff    Unlink any already existing file, permitting the link to occur.

     --hh    If the _t_a_r_g_e_t___f_i_l_e or _t_a_r_g_e_t___d_i_r is a symbolic link, do not follow
           it.  This is most useful with the --ff option, to replace a symlink
           which may point to a directory.

     --ii    Cause llnn to write a prompt to standard error if the target file
           exists.  If the response from the standard input begins with the
           character `y' or `Y', then unlink the target file so that the link
           may occur.  Otherwise, do not attempt the link.  (The --ii option
           overrides any previous --ff options.)

     --nn    Same as --hh, for compatibility with other llnn implementations, namely
           GNU coreutils.

     --ss    Create a symbolic link.

     --vv    Cause llnn to be verbose, showing files as they are processed.

     By default llnn makes _h_a_r_d links.  A hard link to a file is indistinguish-
     able from the original directory entry; any changes to a file are effec-
     tive independent of the name used to reference the file.  Hard links may
     not normally refer to directories and may not span file systems.

     A symbolic link contains the name of the file to which it is linked.  The
     referenced file is used when an open(2) operation is performed on the
     link.  A stat(2) on a symbolic link will return the linked-to file; an
     lstat(2) must be done to obtain information about the link.  The
     readlink(2) call may be used to read the contents of a symbolic link.
     Symbolic links may span file systems and may refer to directories.

     Given one or two arguments, llnn creates a link to an existing file
     _s_o_u_r_c_e___f_i_l_e.  If _t_a_r_g_e_t___f_i_l_e is given, the link has that name;
     _t_a_r_g_e_t___f_i_l_e may also be a directory in which to place the link; otherwise
     it is placed in the current directory.  If only the directory is speci-
     fied, the link will be made to the last component of _s_o_u_r_c_e___f_i_l_e.

     Given more than two arguments, llnn makes links in _t_a_r_g_e_t___d_i_r to all the
     named source files.  The links made will have the same name as the files
     being linked to.

SSEEEE AALLSSOO
     link(2), lstat(2), readlink(2), stat(2), symlink(2), symlink(7)

SSTTAANNDDAARRDDSS
     The llnn utility conforms to IEEE Std 1003.2-1992 (``POSIX.2'').

     The --vv option is an extension to IEEE Std 1003.2-1992 (``POSIX.2'').

HHIISSTTOORRYY
     A llnn utility appeared in Version 6 AT&T UNIX.

NetBSD 6.0                     October 29, 2007                     NetBSD 6.0
